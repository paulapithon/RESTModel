/*
 * generated by Xtext 2.15.0
 */
grammar InternalRest;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.com.poli.restModel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.com.poli.restModel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.com.poli.restModel.services.RestGrammarAccess;

}

@parser::members {

 	private RestGrammarAccess grammarAccess;

    public InternalRestParser(TokenStream input, RestGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RestGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1='Request'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getRequestKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getBodyBodyParserRuleCall_3_0());
				}
				lv_body_3_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"body",
						lv_body_3_0,
						"br.com.poli.restModel.Rest.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getElemElemParserRuleCall_0_0());
				}
				lv_elem_0_0=ruleElem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					set(
						$current,
						"elem",
						lv_elem_0_0,
						"br.com.poli.restModel.Rest.Elem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getGlobAtribGlobAtribParserRuleCall_1_0());
				}
				lv_globAtrib_1_0=ruleGlobAtrib
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					set(
						$current,
						"globAtrib",
						lv_globAtrib_1_0,
						"br.com.poli.restModel.Rest.GlobAtrib");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElem
entryRuleElem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElemRule()); }
	iv_ruleElem=ruleElem
	{ $current=$iv_ruleElem.current; }
	EOF;

// Rule Elem
ruleElem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ClassName_0_0=RULE_ID
				{
					newLeafNode(lv_ClassName_0_0, grammarAccess.getElemAccess().getClassNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElemRule());
					}
					setWithLastConsumed(
						$current,
						"ClassName",
						lv_ClassName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getElemAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='package'
			{
				newLeafNode(otherlv_2, grammarAccess.getElemAccess().getPackageKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElemAccess().getPackagePackageNameParserRuleCall_2_1_0());
					}
					lv_package_3_0=rulePackageName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElemRule());
						}
						set(
							$current,
							"package",
							lv_package_3_0,
							"br.com.poli.restModel.Rest.PackageName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElemAccess().getAtribAtribParserRuleCall_3_0());
				}
				lv_atrib_4_0=ruleAtrib
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElemRule());
					}
					add(
						$current,
						"atrib",
						lv_atrib_4_0,
						"br.com.poli.restModel.Rest.Atrib");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getElemAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAtrib
entryRuleAtrib returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtribRule()); }
	iv_ruleAtrib=ruleAtrib
	{ $current=$iv_ruleAtrib.current; }
	EOF;

// Rule Atrib
ruleAtrib returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_atribName_0_0=RULE_ID
				{
					newLeafNode(lv_atribName_0_0, grammarAccess.getAtribAccess().getAtribNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtribRule());
					}
					setWithLastConsumed(
						$current,
						"atribName",
						lv_atribName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAtribAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAtribAccess().getTipoVALID_TYPESParserRuleCall_2_0_0());
					}
					lv_Tipo_2_1=ruleVALID_TYPES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtribRule());
						}
						set(
							$current,
							"Tipo",
							lv_Tipo_2_1,
							"br.com.poli.restModel.Rest.VALID_TYPES");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAtribAccess().getTipoTYPE_NAMEParserRuleCall_2_0_1());
					}
					lv_Tipo_2_2=ruleTYPE_NAME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtribRule());
						}
						set(
							$current,
							"Tipo",
							lv_Tipo_2_2,
							"br.com.poli.restModel.Rest.TYPE_NAME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getAtribAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtribAccess().getValueValuesParserRuleCall_3_1_0());
					}
					lv_Value_4_0=ruleValues
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtribRule());
						}
						set(
							$current,
							"Value",
							lv_Value_4_0,
							"br.com.poli.restModel.Rest.Values");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleGlobAtrib
entryRuleGlobAtrib returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobAtribRule()); }
	iv_ruleGlobAtrib=ruleGlobAtrib
	{ $current=$iv_ruleGlobAtrib.current; }
	EOF;

// Rule GlobAtrib
ruleGlobAtrib returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_atribName_0_0=RULE_ID
				{
					newLeafNode(lv_atribName_0_0, grammarAccess.getGlobAtribAccess().getAtribNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGlobAtribRule());
					}
					setWithLastConsumed(
						$current,
						"atribName",
						lv_atribName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobAtribAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGlobAtribAccess().getTipoVALID_TYPESParserRuleCall_2_0_0());
					}
					lv_Tipo_2_1=ruleVALID_TYPES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGlobAtribRule());
						}
						set(
							$current,
							"Tipo",
							lv_Tipo_2_1,
							"br.com.poli.restModel.Rest.VALID_TYPES");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getGlobAtribAccess().getTipoTYPE_NAMEParserRuleCall_2_0_1());
					}
					lv_Tipo_2_2=ruleTYPE_NAME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGlobAtribRule());
						}
						set(
							$current,
							"Tipo",
							lv_Tipo_2_2,
							"br.com.poli.restModel.Rest.TYPE_NAME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getGlobAtribAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGlobAtribAccess().getValueValuesParserRuleCall_3_1_0());
					}
					lv_Value_4_0=ruleValues
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGlobAtribRule());
						}
						set(
							$current,
							"Value",
							lv_Value_4_0,
							"br.com.poli.restModel.Rest.Values");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleValues
entryRuleValues returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuesRule()); }
	iv_ruleValues=ruleValues
	{ $current=$iv_ruleValues.current; }
	EOF;

// Rule Values
ruleValues returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuesAccess().getValuesAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_Id_1_0=RULE_INT
					{
						newLeafNode(lv_Id_1_0, grammarAccess.getValuesAccess().getIdINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"Id",
							lv_Id_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuesAccess().getValuesAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_IdB_3_0=RULE_BOOL
					{
						newLeafNode(lv_IdB_3_0, grammarAccess.getValuesAccess().getIdBBOOLTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"IdB",
							lv_IdB_3_0,
							"br.com.poli.restModel.Rest.BOOL");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuesAccess().getValuesAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_IdF_5_0=RULE_FLOAT
					{
						newLeafNode(lv_IdF_5_0, grammarAccess.getValuesAccess().getIdFFLOATTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"IdF",
							lv_IdF_5_0,
							"br.com.poli.restModel.Rest.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuesAccess().getValuesAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_IdS_7_0=RULE_STRING
					{
						newLeafNode(lv_IdS_7_0, grammarAccess.getValuesAccess().getIdSSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"IdS",
							lv_IdS_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuesAccess().getValuesAction_4_0(),
						$current);
				}
			)
			(
				(
					lv_IdC_9_0=RULE_CHAR
					{
						newLeafNode(lv_IdC_9_0, grammarAccess.getValuesAccess().getIdCCHARTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"IdC",
							lv_IdC_9_0,
							"br.com.poli.restModel.Rest.CHAR");
					}
				)
			)
		)
		    |
		(
			otherlv_10='new'
			{
				newLeafNode(otherlv_10, grammarAccess.getValuesAccess().getNewKeyword_5_0());
			}
			(
				(
					lv_IdT_11_0=RULE_ID
					{
						newLeafNode(lv_IdT_11_0, grammarAccess.getValuesAccess().getIdTIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuesRule());
						}
						setWithLastConsumed(
							$current,
							"IdT",
							lv_IdT_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getValuesAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					(
						(
							lv_Par_13_0=RULE_ID
							{
								newLeafNode(lv_Par_13_0, grammarAccess.getValuesAccess().getParIDTerminalRuleCall_5_3_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getValuesRule());
								}
								addWithLastConsumed(
									$current,
									"Par",
									lv_Par_13_0,
									"org.eclipse.xtext.common.Terminals.ID");
							}
						)
					)
					otherlv_14=','
					{
						newLeafNode(otherlv_14, grammarAccess.getValuesAccess().getCommaKeyword_5_3_0_1());
					}
				)*
				(
					(
						lv_Par_15_0=RULE_ID
						{
							newLeafNode(lv_Par_15_0, grammarAccess.getValuesAccess().getParIDTerminalRuleCall_5_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getValuesRule());
							}
							addWithLastConsumed(
								$current,
								"Par",
								lv_Par_15_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)?
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getValuesAccess().getRightParenthesisKeyword_5_4());
			}
		)
	)
;

// Entry rule entryRuleTYPE_NAME
entryRuleTYPE_NAME returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTYPE_NAMERule()); }
	iv_ruleTYPE_NAME=ruleTYPE_NAME
	{ $current=$iv_ruleTYPE_NAME.current.getText(); }
	EOF;

// Rule TYPE_NAME
ruleTYPE_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTYPE_NAMEAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTYPE_NAMEAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					this_ID_2=RULE_ID
					{
						$current.merge(this_ID_2);
					}
					{
						newLeafNode(this_ID_2, grammarAccess.getTYPE_NAMEAccess().getIDTerminalRuleCall_1_1_0_0());
					}
					    |
					{
						newCompositeNode(grammarAccess.getTYPE_NAMEAccess().getVALID_TYPESParserRuleCall_1_1_0_1());
					}
					this_VALID_TYPES_3=ruleVALID_TYPES
					{
						$current.merge(this_VALID_TYPES_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getTYPE_NAMEAccess().getCommaKeyword_1_1_1());
				}
			)*
			(
				this_ID_5=RULE_ID
				{
					$current.merge(this_ID_5);
				}
				{
					newLeafNode(this_ID_5, grammarAccess.getTYPE_NAMEAccess().getIDTerminalRuleCall_1_2_0());
				}
				    |
				{
					newCompositeNode(grammarAccess.getTYPE_NAMEAccess().getVALID_TYPESParserRuleCall_1_2_1());
				}
				this_VALID_TYPES_6=ruleVALID_TYPES
				{
					$current.merge(this_VALID_TYPES_6);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTYPE_NAMEAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleVALID_TYPES
entryRuleVALID_TYPES returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALID_TYPESRule()); }
	iv_ruleVALID_TYPES=ruleVALID_TYPES
	{ $current=$iv_ruleVALID_TYPES.current.getText(); }
	EOF;

// Rule VALID_TYPES
ruleVALID_TYPES returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALID_TYPESAccess().getStringKeyword_0());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALID_TYPESAccess().getBooleanKeyword_1());
		}
		    |
		kw='char'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALID_TYPESAccess().getCharKeyword_2());
		}
		    |
		this_INT_TYPES_3=RULE_INT_TYPES
		{
			$current.merge(this_INT_TYPES_3);
		}
		{
			newLeafNode(this_INT_TYPES_3, grammarAccess.getVALID_TYPESAccess().getINT_TYPESTerminalRuleCall_3());
		}
		    |
		this_FLOAT_TYPES_4=RULE_FLOAT_TYPES
		{
			$current.merge(this_FLOAT_TYPES_4);
		}
		{
			newLeafNode(this_FLOAT_TYPES_4, grammarAccess.getVALID_TYPESAccess().getFLOAT_TYPESTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current.getText(); }
	EOF;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPackageNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_BOOL : ('True'|'False');

RULE_FLOAT : '1'..'9' ('0'..'9')* '.' ('0'..'9')+;

RULE_CHAR : '\'' . '\'';

RULE_INT_TYPES : ('int'|'long'|'short'|'byte');

RULE_FLOAT_TYPES : ('float'|'double');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '##' ( options {greedy=false;} : . )*'##';

RULE_ALMOST__ANY__THING : ':' '{' ~('}')* '}';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ANY_OTHER : .;
