/**
 * generated by Xtext 2.15.0
 */
package br.com.poli.restModel.rest.impl;

import br.com.poli.restModel.rest.RestPackage;
import br.com.poli.restModel.rest.Values;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Values</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getId <em>Id</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getIdB <em>Id B</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getIdF <em>Id F</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getIdS <em>Id S</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getIdC <em>Id C</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getIdT <em>Id T</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ValuesImpl#getPar <em>Par</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValuesImpl extends MinimalEObjectImpl.Container implements Values
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected int id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getIdB() <em>Id B</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdB()
   * @generated
   * @ordered
   */
  protected static final String ID_B_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdB() <em>Id B</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdB()
   * @generated
   * @ordered
   */
  protected String idB = ID_B_EDEFAULT;

  /**
   * The default value of the '{@link #getIdF() <em>Id F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdF()
   * @generated
   * @ordered
   */
  protected static final float ID_F_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getIdF() <em>Id F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdF()
   * @generated
   * @ordered
   */
  protected float idF = ID_F_EDEFAULT;

  /**
   * The default value of the '{@link #getIdS() <em>Id S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdS()
   * @generated
   * @ordered
   */
  protected static final String ID_S_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdS() <em>Id S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdS()
   * @generated
   * @ordered
   */
  protected String idS = ID_S_EDEFAULT;

  /**
   * The default value of the '{@link #getIdC() <em>Id C</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdC()
   * @generated
   * @ordered
   */
  protected static final char ID_C_EDEFAULT = '\u0000';

  /**
   * The cached value of the '{@link #getIdC() <em>Id C</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdC()
   * @generated
   * @ordered
   */
  protected char idC = ID_C_EDEFAULT;

  /**
   * The default value of the '{@link #getIdT() <em>Id T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdT()
   * @generated
   * @ordered
   */
  protected static final String ID_T_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdT() <em>Id T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdT()
   * @generated
   * @ordered
   */
  protected String idT = ID_T_EDEFAULT;

  /**
   * The cached value of the '{@link #getPar() <em>Par</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPar()
   * @generated
   * @ordered
   */
  protected EList<String> par;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValuesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestPackage.Literals.VALUES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(int newId)
  {
    int oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdB()
  {
    return idB;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdB(String newIdB)
  {
    String oldIdB = idB;
    idB = newIdB;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID_B, oldIdB, idB));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public float getIdF()
  {
    return idF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdF(float newIdF)
  {
    float oldIdF = idF;
    idF = newIdF;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID_F, oldIdF, idF));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdS()
  {
    return idS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdS(String newIdS)
  {
    String oldIdS = idS;
    idS = newIdS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID_S, oldIdS, idS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public char getIdC()
  {
    return idC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdC(char newIdC)
  {
    char oldIdC = idC;
    idC = newIdC;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID_C, oldIdC, idC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdT()
  {
    return idT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdT(String newIdT)
  {
    String oldIdT = idT;
    idT = newIdT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.VALUES__ID_T, oldIdT, idT));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getPar()
  {
    if (par == null)
    {
      par = new EDataTypeEList<String>(String.class, this, RestPackage.VALUES__PAR);
    }
    return par;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestPackage.VALUES__ID:
        return getId();
      case RestPackage.VALUES__ID_B:
        return getIdB();
      case RestPackage.VALUES__ID_F:
        return getIdF();
      case RestPackage.VALUES__ID_S:
        return getIdS();
      case RestPackage.VALUES__ID_C:
        return getIdC();
      case RestPackage.VALUES__ID_T:
        return getIdT();
      case RestPackage.VALUES__PAR:
        return getPar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestPackage.VALUES__ID:
        setId((Integer)newValue);
        return;
      case RestPackage.VALUES__ID_B:
        setIdB((String)newValue);
        return;
      case RestPackage.VALUES__ID_F:
        setIdF((Float)newValue);
        return;
      case RestPackage.VALUES__ID_S:
        setIdS((String)newValue);
        return;
      case RestPackage.VALUES__ID_C:
        setIdC((Character)newValue);
        return;
      case RestPackage.VALUES__ID_T:
        setIdT((String)newValue);
        return;
      case RestPackage.VALUES__PAR:
        getPar().clear();
        getPar().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.VALUES__ID:
        setId(ID_EDEFAULT);
        return;
      case RestPackage.VALUES__ID_B:
        setIdB(ID_B_EDEFAULT);
        return;
      case RestPackage.VALUES__ID_F:
        setIdF(ID_F_EDEFAULT);
        return;
      case RestPackage.VALUES__ID_S:
        setIdS(ID_S_EDEFAULT);
        return;
      case RestPackage.VALUES__ID_C:
        setIdC(ID_C_EDEFAULT);
        return;
      case RestPackage.VALUES__ID_T:
        setIdT(ID_T_EDEFAULT);
        return;
      case RestPackage.VALUES__PAR:
        getPar().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.VALUES__ID:
        return id != ID_EDEFAULT;
      case RestPackage.VALUES__ID_B:
        return ID_B_EDEFAULT == null ? idB != null : !ID_B_EDEFAULT.equals(idB);
      case RestPackage.VALUES__ID_F:
        return idF != ID_F_EDEFAULT;
      case RestPackage.VALUES__ID_S:
        return ID_S_EDEFAULT == null ? idS != null : !ID_S_EDEFAULT.equals(idS);
      case RestPackage.VALUES__ID_C:
        return idC != ID_C_EDEFAULT;
      case RestPackage.VALUES__ID_T:
        return ID_T_EDEFAULT == null ? idT != null : !ID_T_EDEFAULT.equals(idT);
      case RestPackage.VALUES__PAR:
        return par != null && !par.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Id: ");
    result.append(id);
    result.append(", IdB: ");
    result.append(idB);
    result.append(", IdF: ");
    result.append(idF);
    result.append(", IdS: ");
    result.append(idS);
    result.append(", IdC: ");
    result.append(idC);
    result.append(", IdT: ");
    result.append(idT);
    result.append(", Par: ");
    result.append(par);
    result.append(')');
    return result.toString();
  }

} //ValuesImpl
