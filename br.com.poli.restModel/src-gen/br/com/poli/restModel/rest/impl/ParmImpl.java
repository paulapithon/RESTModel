/**
 * generated by Xtext 2.15.0
 */
package br.com.poli.restModel.rest.impl;

import br.com.poli.restModel.rest.Parm;
import br.com.poli.restModel.rest.RestPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parm</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.com.poli.restModel.rest.impl.ParmImpl#getAtribName <em>Atrib Name</em>}</li>
 *   <li>{@link br.com.poli.restModel.rest.impl.ParmImpl#getTipo_atri <em>Tipo atri</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParmImpl extends MinimalEObjectImpl.Container implements Parm
{
  /**
   * The default value of the '{@link #getAtribName() <em>Atrib Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtribName()
   * @generated
   * @ordered
   */
  protected static final String ATRIB_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAtribName() <em>Atrib Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtribName()
   * @generated
   * @ordered
   */
  protected String atribName = ATRIB_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getTipo_atri() <em>Tipo atri</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo_atri()
   * @generated
   * @ordered
   */
  protected static final String TIPO_ATRI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTipo_atri() <em>Tipo atri</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo_atri()
   * @generated
   * @ordered
   */
  protected String tipo_atri = TIPO_ATRI_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParmImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestPackage.Literals.PARM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAtribName()
  {
    return atribName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtribName(String newAtribName)
  {
    String oldAtribName = atribName;
    atribName = newAtribName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.PARM__ATRIB_NAME, oldAtribName, atribName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTipo_atri()
  {
    return tipo_atri;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTipo_atri(String newTipo_atri)
  {
    String oldTipo_atri = tipo_atri;
    tipo_atri = newTipo_atri;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.PARM__TIPO_ATRI, oldTipo_atri, tipo_atri));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestPackage.PARM__ATRIB_NAME:
        return getAtribName();
      case RestPackage.PARM__TIPO_ATRI:
        return getTipo_atri();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestPackage.PARM__ATRIB_NAME:
        setAtribName((String)newValue);
        return;
      case RestPackage.PARM__TIPO_ATRI:
        setTipo_atri((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.PARM__ATRIB_NAME:
        setAtribName(ATRIB_NAME_EDEFAULT);
        return;
      case RestPackage.PARM__TIPO_ATRI:
        setTipo_atri(TIPO_ATRI_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.PARM__ATRIB_NAME:
        return ATRIB_NAME_EDEFAULT == null ? atribName != null : !ATRIB_NAME_EDEFAULT.equals(atribName);
      case RestPackage.PARM__TIPO_ATRI:
        return TIPO_ATRI_EDEFAULT == null ? tipo_atri != null : !TIPO_ATRI_EDEFAULT.equals(tipo_atri);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (atribName: ");
    result.append(atribName);
    result.append(", Tipo_atri: ");
    result.append(tipo_atri);
    result.append(')');
    return result.toString();
  }

} //ParmImpl
